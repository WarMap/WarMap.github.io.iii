<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[WarMap’s Blog]]></title>
  <subtitle><![CDATA[Time is Money]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://warmap.me/"/>
  <updated>2015-12-22T13:09:21.000Z</updated>
  <id>http://warmap.me/</id>
  
  <author>
    <name><![CDATA[WarMap]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[va_list OC不定参数函数的实现]]></title>
    <link href="http://warmap.me/2015/12/22/va-list-OC%E4%B8%8D%E5%AE%9A%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://warmap.me/2015/12/22/va-list-OC不定参数函数的实现/</id>
    <published>2015-12-22T01:39:08.000Z</published>
    <updated>2015-12-22T13:09:21.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u4ECB_u7ECD"><a href="#u4ECB_u7ECD" class="headerlink" title="介绍"></a>介绍</h1><p>官方文档是最好的学习资料，我们先看看系统中我们常用的不定参数函数</p>
<pre><code>void NSLog ( NSString *format, ... );

- (instancetype)initWithFormat:(NSString *)format, ...

- (instancetype)initWithTitle:(NSString *)title
                 delegate:(id&lt;UIActionSheetDelegate&gt;)delegate
        cancelButtonTitle:(NSString *)cancelButtonTitle
   destructiveButtonTitle:(NSString *)destructiveButtonTitle
        otherButtonTitles:(NSString *)otherButtonTitles, ...
</code></pre><p>不定参数函数的参数数量是可变动的，它使用省略号来忽略之后的参数。需要注意的是:<strong>不定参数函数最少要有一个命名的参数</strong>,不然你就会收到如下错误提示,但在C++，则没有这种强制要求。 （虽然在C++中，这样的声明是合理的，但是这种写法，因为没有已命名的参数，使得va_start没办法抓到动态参数的正确起始点。）</p>
<p><img src="http://ww4.sinaimg.cn/large/77178728gw1ez87f3xxeej208u00m3yh.jpg" alt=""></p>
<h1 id="u539F_u6599"><a href="#u539F_u6599" class="headerlink" title="原料"></a>原料</h1><table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:left">描述</th>
<th style="text-align:center">兼容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">va_list</td>
<td style="text-align:left">用来保存宏va_arg与宏va_end所需信息</td>
<td style="text-align:center">C89</td>
</tr>
<tr>
<td style="text-align:center">va_start</td>
<td style="text-align:left">使va_list指向起始的参数</td>
<td style="text-align:center">C89</td>
</tr>
<tr>
<td style="text-align:center">va_arg</td>
<td style="text-align:left">检索参数</td>
<td style="text-align:center">C89</td>
</tr>
<tr>
<td style="text-align:center">va_end</td>
<td style="text-align:left">释放va_list</td>
<td style="text-align:center">C89</td>
</tr>
<tr>
<td style="text-align:center">va_copy</td>
<td style="text-align:left">拷贝va_list的内容</td>
<td style="text-align:center">C99</td>
</tr>
</tbody>
</table>
<h1 id="u5F00_u5DE5"><a href="#u5F00_u5DE5" class="headerlink" title="开工"></a>开工</h1><p>先定义一个“人”类</p>
<pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@interface Person : NSObject</span><br><span class="line"></span><br><span class="line">- (void)eatAllKindsOfFood:(NSString *)food1 food2:(NSString *)food2 ,...;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation Person</span><br><span class="line"></span><br><span class="line">- (void)eatAllKindsOfFood:(NSString *)food1 food2:(NSString *)food2, ... &#123;</span><br><span class="line">   	NSString *str;</span><br><span class="line">   	NSLog(@<span class="string">"吃%@"</span>,food1);</span><br><span class="line">   	va_list v1;</span><br><span class="line">  		str = food2;</span><br><span class="line">   	va_start(v1,food2);</span><br><span class="line">   	<span class="keyword">do</span></span><br><span class="line">   	&#123;</span><br><span class="line">       	NSLog(@<span class="string">"吃%@"</span>,str);</span><br><span class="line">       	str=va_arg(v1,NSString*);</span><br><span class="line">   	&#125; <span class="keyword">while</span> (str != NULL );</span><br><span class="line">   	va_end(v1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>
</code></pre><p>##剖析<br>原型： void va_start(va_list arg_ptr,prev_param)<br>功能： prev_param为最后一个固定参数，<strong>函数参数列表中参数在内存中的顺序与函数声明时的顺序是一致的。</strong>这里对应的就是参数food2.va_start根据prev_param的地址起点来确定不定参数的内存起始地址，然后赋值给arg_ptr。</p>
<p>原型：type va_arg(va_list arg_ptr,type);<br>功能：获取下一个变参的地址。arg_ptr即为变参的地址，type为要取出变参的类型（决定返回值的类型）</p>
<p>参考：</p>
<p><a href="https://zh.wikipedia.org/wiki/Stdarg.h" target="_blank" rel="external">https://zh.wikipedia.org/wiki/Stdarg.h</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u4ECB_u7ECD"><a href="#u4ECB_u7ECD" class="headerlink" title="介绍"></a>介绍</h1><p>官方文档是最好的学习资料，我们先看看系统中我们常用的不定参数函数</p>
<pre><code>void]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下使用Hexo－github搭建个人博客]]></title>
    <link href="http://warmap.me/2015/12/15/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8Hexo%EF%BC%8Dgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://warmap.me/2015/12/15/Mac下使用Hexo－github搭建个人博客/</id>
    <published>2015-12-15T14:28:35.000Z</published>
    <updated>2015-12-16T06:32:30.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;先前查资料或问题总能进到他人的blog，心里很是长草。周末决定自己也搞一个,本来做好了万难的准备（以为要自己写界面干啥干啥的，最后还要申请个域名、空间什么的，balabala）后来发现了Hexo和github的组合,简直容易到爆啊，对了做到容易到爆当然少不了homebrew这等神器。好下面开始。对了忘了告诉大家，这篇博文只是写下来留个记录的，如果你也想通过hexo搭建属于自己的blog请移步到<a href="https://hexo.io/" target="_blank" rel="external">hexo官网</a></p>
<h2 id="u5F00_u641E"><a href="#u5F00_u641E" class="headerlink" title="开搞"></a>开搞</h2><h3 id="what_do_we_need_uFF1F"><a href="#what_do_we_need_uFF1F" class="headerlink" title="what do we need？"></a>what do we need？</h3><ul>
<li>homebrew （从此安装只需一句话）</li>
<li>nodejs（hexo基于nodejs）</li>
<li>hexo</li>
<li>git（提交部署github）</li>
<li>github账号</li>
</ul>
<h3 id="how_to_do_it"><a href="#how_to_do_it" class="headerlink" title="how to do it"></a>how to do it</h3><h4 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h4><ol>
<li><p>安装Homebrew（一句话） <a href="http://brew.sh/" target="_blank" rel="external">官网</a></p>
<pre><code>ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
</code></pre></li>
<li><p>安装nodejs（又是一句话）</p>
<pre><code>brew install node
</code></pre></li>
<li><p>安装hexo（又是三句话）（咦，总感觉哪里不对）</p>
<pre><code>npm install -g hexo
hexo init
npm install
</code></pre></li>
<li><p>安装git（还是一句话，就是这个feel倍爽）</p>
<pre><code>sudo brew install git
</code></pre></li>
</ol>
<h4 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h4><ol>
<li><p>生成SSH keys(<a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">Generating SSH keys</a>)</p>
<p> SSH keys均在用户根目录下.ssh文件夹中保存，会存在之前已经存在key的情况，下面分开讨论</p>
<ul>
<li><p>没有key的情况（一路回车在~/.ssh目录下得到id_rsa和id_rsa.pub两个文件）</p>
<pre><code>ssh-keygen -t rsa -C &quot;注册github的邮箱”
</code></pre></li>
<li><p>有key的情况（生成key并制定key的名字）</p>
<pre><code>ssh-keygen -t rsa -f ~/.ssh/key的名字 -C &quot;注册github的邮箱&quot;
</code></pre></li>
</ul>
</li>
<li><p>添加key到ssh-agent</p>
<pre><code>ssh-add ~/.ssh/id_rsa
</code></pre></li>
<li>注册github帐号</li>
<li><p>添加key到github</p>
<ul>
<li>打开github，在右上角点击你的头像，然后点击<strong>setting</strong><br><img src="http://ww3.sinaimg.cn/large/77178728gw1ez1b3kttpsj20an0fjaag.jpg" alt=""></li>
<li>设置的侧边栏点击<strong>SSH keys</strong><br><img src="http://ww3.sinaimg.cn/large/77178728gw1ez1bqaseboj20gk0963yu.jpg" alt=""></li>
<li>点击<strong>Add SSH key</strong><br><img src="http://ww1.sinaimg.cn/large/77178728gw1ez1bt2nqlyj20gk02mwek.jpg" alt=""></li>
<li>title随便写，把你的key粘贴到下面。然后点击<strong>Add key</strong><br><img src="http://ww4.sinaimg.cn/large/77178728gw1ez1bu4p4gqj20gn09oq3y.jpg" alt=""></li>
<li><p>检查是否关联成功</p>
<pre><code>ssh -T git@github.com
</code></pre></li>
</ul>
</li>
<li><p>hexo关联github</p>
<p>修改hexo根目录下_config.yml文件（xxxx为你的github账户名称）</p>
<pre><code>deploy:
  type: github
  repo: git@github.com:xxxx/xxxx.github.io.git
  branch: master
</code></pre></li>
<li><p>见证奇迹的时刻！</p>
<pre><code>hexo d -g
</code></pre></li>
</ol>
<h3 id="finish"><a href="#finish" class="headerlink" title="finish"></a>finish</h3>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;先前查资]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://warmap.me/2015/12/13/hello-world/"/>
    <id>http://warmap.me/2015/12/13/hello-world/</id>
    <published>2015-12-13T05:37:51.000Z</published>
    <updated>2015-12-13T05:37:51.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start"><a href="#Quick_Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create_a_new_post"><a href="#Create_a_new_post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files"><a href="#Generate_static_files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites"><a href="#Deploy_to_remote_sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
